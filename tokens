import pygame
class battle_token():
    def __init__(self, screen, caste, status, typee, power):
        self.Token_Width = 16
        self.Token_Height = 16
        self.caste = caste
        self.status = status
        self.typee = typee
        self.power = power
        if caste == "crab":
            if status == 0: #close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "crane":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "lion":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "scorpion":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "unicorn":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "dragon":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "phoenix":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                if typee == "fleet":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "infantry":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "sugendzya":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "piece":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
                elif typee == "pogrom":
                    self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        # else otstan', net bol'she
        self.screen = screen
        self.rect = self.image.get_rect()
        self.screen_rect = screen.get_rect()

    def output(self):

        self.screen.blit(self.image, self.rect)
class control_token():
    def __init__(self, screen, caste, status):
        self.Token_Width = 16
        self.Token_Height = 16
        self.caste = caste
        self.status = status
        if caste == "crab":
            if status == 0: #close
                self.image = pygame.image.load(
                'BattleForRokugan_content/??.jpg')  # в каждом ифе аккуратно вырезать все картинки
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "crane":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "lion":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "scorpion":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "unicorn":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "dragon":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        elif caste == "phoenix":
            if status == 0:  # close
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
            else:
                self.image = pygame.image.load('BattleForRokugan_content/??.jpg')
        # else otstan', net bol'she
        self.screen = screen
        self.rect = self.image.get_rect()
        self.screen_rect = screen.get_rect()

    def output(self):

        self.screen.blit(self.image, self.rect)
